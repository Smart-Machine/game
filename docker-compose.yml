services:
  api-gateway:
    build: ./gateway
    container_name: api-gateway
    depends_on:
      - redis
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis

  redis:
    image: "redis:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - app-network

  session-service-1:
    build: ./services/session
    container_name: session-service-1
    environment:
      - PORT=8001
    ports:
      - "8001:8001"
    networks:
      - app-network
  
  session-service-2:
    build: ./services/session
    container_name: session-service-2
    environment:
      - PORT=8002
    ports:
      - "8002:8002"
    networks:
      - app-network
  
  session-service-3:
    build: ./services/session
    container_name: session-service-3
    environment:
      - PORT=8003
    ports:
      - "8003:8003"
    networks:
      - app-network
  
  user-service-1:
    build: ./services/user
    container_name: user-service-1
    environment:
      - PORT=8004
    ports:
      - "8004:8004"
    networks:
      - app-network
    
  user-service-2:
    build: ./services/user
    container_name: user-service-2
    environment:
      - PORT=8005
    ports:
      - "8005:8005"
    networks:
      - app-network

  user-service-3:
    build: ./services/user
    container_name: user-service-3
    environment:
      - PORT=8006
    ports:
      - "8006:8006"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    command: ["--noauth"]
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
  
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_service
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  mongo-data:
    driver: local
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
